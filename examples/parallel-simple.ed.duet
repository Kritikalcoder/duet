-- Presna algorithm
let main = pλ ε  : ℝ⁺,
              δ  : ℝ⁺
              .
              df : 𝕄 [L∞ , U | ★ , 𝐝 ℕ ∷ 𝐝 ℝ ∷ [] ],
              ε : ℝ⁺[ε],
              δ : ℝ⁺[δ],
              q : ℕ[0],
              r : ℕ[0],
              s : ℕ[0],
              t : ℕ[1]
              ⇒

  --          must be 1-sens in row
  --                         ↓
  parallel[ df, ℘ {true, false} ] {row ⇒ (clip (row#[q,r])) ≡ 1} { b, p ⇒
  --                                              ↑
  --     this is the only variable that gets a non-∞ privacy cost when referenced
    x ← gauss[ℝ⁺[1.0], ε, δ] <p> { clip(p#[s,t]) };
    return ⟨b, x⟩
  }
in return main


-- Γ                                        , ⌉Σᴳ₀⌈⸢1⸣                     ⊢ eᴳ₀ : 𝕄 [ ℓ , c | ★ , s ]
-- Γ                                        , Σᴳ₁                          ⊢ eᴳ₁ : ℘ τ₁
-- Γ ⊎ {x₂ : 𝕄 [ ℓ , c | 1 , s ]}           , Σᴳ₂ ⊎ {x₂ @ᴳ 1}              ⊢ eᴳ₂ : τ₁
-- Γ ⊎ {x₃ : τ₁ , x₄ : 𝕄 [ ℓ , c | ★ , s ]} , Σᴿ₃ ⊎ {x₃ @ᴿ ∞, x₄ @ᴿ ⟨ε,δ⟩} ⊢ eᴿ₃ : τ₂
-- --------------------------------------------------------------------------------------
--   Γ
-- , ⌉Σᴳ₁ + Σᴳ₂⌈⸢∞ᴿ⸣ + ⌉Σᴿ₃⌈⸢∞ᴿ⸣ + ⌉Σᴳ₀⌈⸢⟨ε,δ⟩⸣
-- ⊢ parallel[ eᴳ₀ , eᴳ₁ ] { x₂ ⇒ eᴳ₂ } { x₃ , x₄ ⇒ eᴿ₃ }
-- : ℘ τ₂


-- Σᴳ₀          = { a @ 1     , b @ 0.5   , c @ ⊥ , d @ ⊥ } -- sensitivities
-- ⌉Σᴳ₀⌈⸢⟨ε,δ⟩⸣ = { a @ ⟨ε,δ⟩ , b @ ⟨ε,δ⟩ , c @ ⊥ , d @ ⊥ } -- privacies
