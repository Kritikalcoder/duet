-- Presna algorithm
let main = pŒª Œµ  : ‚Ñù‚Å∫,
              Œ¥  : ‚Ñù‚Å∫
              .
              df : ùïÑ [L‚àû , U | ‚òÖ , ‚Ñï ‚à∑ ‚Ñù ‚à∑ [] ],
              Œµ : ‚Ñù‚Å∫[Œµ],
              Œ¥ : ‚Ñù‚Å∫[Œ¥],
              q : ‚Ñï[0],
              r : ‚Ñï[0],
              s : ‚Ñï[0],
              t : ‚Ñï[1]
              ‚áí

  -- OLD PROPOSAL
  -- partition df into rows where: (1) first col is 1 and (2) others
  --                                                      function from partition value and partition to œÑ
  --               function from df rows to members of partition values       ‚Üì
  --                    set of partition values      ‚Üì                        ‚Üì
  --                 dataframe   ‚Üì                   ‚Üì                        ‚Üì
  --                     ‚Üì       ‚Üì                   ‚Üì                        ‚Üì
  -- let ps = box(partition df {true, false} {row ‚áí row#[0,0] ‚â° 1} {pName, p ‚áí ‚ü®pName, rows p‚ü©})
  -- in mgauss[‚Ñù‚Å∫[1.0], Œµ, Œ¥] <df> { (unbox ps) } -- now what do we do about the name of the partition?

  -- maybe this instead?
  -- ALSO OLD PROPOSAL
  -- let ps = box(partition df {true, false} {row ‚áí row#[0,0] ‚â° 1})
  -- in mapP (unbox ps) { pName, p ‚áí v ‚Üê gauss[‚Ñù‚Å∫[1.0], Œµ, Œ¥] <df> {p}; return ‚ü®pName, v‚ü© }

  -- newest proposal
  parallel df, ‚Ñô{1, 2}, {row ‚áí row#[q,r]} {b, p ‚áí x ‚Üê gauss[‚Ñù‚Å∫[1.0], Œµ, Œ¥] <df,s,t> { p#[s,t] }; return ‚ü®b, x‚ü©}
in main
