let query = sλ .
               b: 𝔻
               ⇒
               sλ m  : ℕ,
                  n  : ℕ
                  .
                  xs : 𝕄 [L∞, U|m, n⋅𝔻 ]
                  ⇒
  let scaled   = mmap xs { x ⇒ b ⋅ x } in
  let clipped  = mmap (mclip[L2] scaled) { x ⇒ x } in
  let filtered = mfilter zip[clipped, xs] { row  ⇒ 
                   let ⟨clipped, orig⟩ = row#[ℕ[0], ℕ[0]] in
                   clipped ≡ orig } in
  ℝ⁺[0.5] ⋅ real (rows filtered)
in
  

let main = pλ m  : ℕ,
              n  : ℕ,
              ε  : ℝ⁺,
              k  : ℕ
              .
              xs : 𝕄 [L∞, U|m, n⋅𝔻 ] ,
              ε  : ℝ⁺[ε],
              bs : 𝕄 [L1, U|1, k⋅𝔻 ]
              ⇒
  let target = 0.9 ⋅ real (rows xs) in
  let fs = mmap bs { b ⇒ query b } in
  SVT [ε] <xs> fs on xs
in main
